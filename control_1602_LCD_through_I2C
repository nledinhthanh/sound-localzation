import RPi.GPIO as GPIO
from Adafruit_PureIO.smbus import SMBus

# PCF8574 pin mapping to LCD
RS = 0
RW = 1
EN = 2
LED = 3
D4 = 4
D5 = 5
D6 = 6
D7 = 7

# I2C address of PCF8574 IO expander
PCF8574_ADDR = 0x27

def detect_i2c(addr):
    try:
        with SMBus(1) as bus:
            bus.read_byte(addr)
            print("Found device at address 0x{:02X}".format(addr))
            return True
    except:
        print("No device found at address 0x{:02X}".format(addr))
        return False

def lcd_init():
    # Initialize PCF8574 IO expander and set pins to output mode
    with SMBus(1) as bus:
        bus.write_byte(PCF8574_ADDR, 0x00)
    # Initialize LCD display
    lcd = GPIO.PWM(LED, 50)
    lcd.start(0)
    lcd_set_cmd(0x33) # Initialize
    lcd_set_cmd(0x32) # Set to 4-bit mode
    lcd_set_cmd(0x06) # Set entry mode
    lcd_set_cmd(0x0C) # Turn on display
    lcd_set_cmd(0x28) # Set function mode
    lcd_set_cmd(0x01) # Clear display

def lcd_set_cmd(cmd):
    # Send a command to the LCD display
    GPIO.output(RS, 0)
    lcd_write_4bit(cmd >> 4)
    lcd_write_4bit(cmd & 0x0F)

def lcd_set_text(text):
    # Send a string to the LCD display
    GPIO.output(RS, 1)
    for c in text:
        lcd_write_4bit(ord(c) >> 4)
        lcd_write_4bit(ord(c) & 0x0F)

def lcd_write_4bit(value):
    # Write a 4-bit value to the LCD display
    with SMBus(1) as bus:
        bus.write_byte(PCF8574_ADDR, value | 0x08)
        GPIO.output(EN, 1)
        GPIO.output(EN, 0)

def print_distance(distance):
    # Print the distance on the LCD display
    lcd_set_cmd(0x80) # Set cursor to first line
    lcd_set_text("Distance is {:.1f}m".format(distance))

def main():
    # Set up GPIO pins
    GPIO.setmode(GPIO.BCM)
    GPIO.setup([RS, RW, EN, LED, D4, D5, D6, D7], GPIO.OUT)
    GPIO.output(RW, 0)
    # Detect I2C devices
    if detect_i2c(0x27):
        PCF8574_ADDR = 0x27
    elif detect_i2c(0x3F):
        PCF8574_ADDR = 0x3F
    else:
        print("No I2C device found")
        return
    # Initialize LCD display
    lcd_init()
    # Main loop
    while True:
        # Read distance sensor and print distance
        distance = 0.8 # Replace with the actual distance value read from the sensor
        print_distance(distance)
